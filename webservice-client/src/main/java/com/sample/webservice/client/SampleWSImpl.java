
package com.sample.webservice.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SampleWSImpl", targetNamespace = "http://server.webservice.sample.com", wsdlLocation = "file:/D:/git-repositories/github/cjrequena/webservice-sample/webservice-sever/target/webservice-sever/WEB-INF/wsdl/SampleWSImpl.wsdl")
public class SampleWSImpl
    extends Service
{

    private final static URL SAMPLEWSIMPL_WSDL_LOCATION;
    private final static WebServiceException SAMPLEWSIMPL_EXCEPTION;
    private final static QName SAMPLEWSIMPL_QNAME = new QName("http://server.webservice.sample.com", "SampleWSImpl");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/git-repositories/github/cjrequena/webservice-sample/webservice-sever/target/webservice-sever/WEB-INF/wsdl/SampleWSImpl.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SAMPLEWSIMPL_WSDL_LOCATION = url;
        SAMPLEWSIMPL_EXCEPTION = e;
    }

    public SampleWSImpl() {
        super(__getWsdlLocation(), SAMPLEWSIMPL_QNAME);
    }

    public SampleWSImpl(WebServiceFeature... features) {
        super(__getWsdlLocation(), SAMPLEWSIMPL_QNAME, features);
    }

    public SampleWSImpl(URL wsdlLocation) {
        super(wsdlLocation, SAMPLEWSIMPL_QNAME);
    }

    public SampleWSImpl(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SAMPLEWSIMPL_QNAME, features);
    }

    public SampleWSImpl(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SampleWSImpl(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ISampleWS
     */
    @WebEndpoint(name = "SampleWSPort")
    public ISampleWS getSampleWSPort() {
        return super.getPort(new QName("http://server.webservice.sample.com", "SampleWSPort"), ISampleWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISampleWS
     */
    @WebEndpoint(name = "SampleWSPort")
    public ISampleWS getSampleWSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://server.webservice.sample.com", "SampleWSPort"), ISampleWS.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SAMPLEWSIMPL_EXCEPTION!= null) {
            throw SAMPLEWSIMPL_EXCEPTION;
        }
        return SAMPLEWSIMPL_WSDL_LOCATION;
    }

}
